{"version":3,"sources":["uform.js","uform_without_templates.js","templates.js"],"names":["commonDialogController","data","$modalInstance","uform","angular","extend","this","buildDialog","header","body","footer","ok","close","cancel","dismiss","uf","module","config","$provide","datepickerConfig","showWeeks","decorator","$delegate","ngModel","controller","scope","element","attrs","$injector","$interpolate","get","$set","name","invoke","$scope","$element","$attrs","forEach","ng-form","form","directive","ngForm","$compile","restrict","field","$parent","$eval","require","controllerAs","link","$proxy","html","compileField","contents","$parse","attr","$watch","res","result","value","disabled","ufieldHide","css","$rootScope","templateUrl","transclude","ufield","fields","create","option","elem","group","$form","push","template","modelCtrl","capitalize","inputValue","undefined","capitalized","toUpperCase","$setViewValue","$render","$parsers","ele","truncateTo","length","parseInt","truncate","substring","upDate","upTime","upDatetime","upPassword","upCheckbox","upRadio","upSubmit","upSelect","upTextarea","tpl","direct","uFormUtil","getTemplate","then","textTpl","replace","toAttrs","vm","customs","dialogs","open","e","size","syntaxMap","sql","javascript","json","mode","syntax","lineNumbers","lineWrapping","$inject","provider","_tp","_vo","_pt","_setOpts","opts","_opts","type","isDefined","validateOn","pattern","useType","val","useValidateOn","usePattern","$get","_buildDialog","_buildForm","formClass","labelClass","fieldClass","_end","_addField","label","style","init","id","_id","addField","end","inputClass","buildForm","filter","items","reverse","filtered","item","sort","a","b","factory","$templateCache","$q","$http","obj","str","o","next","tpath","when","cache","put","response","error","upBindCompile","toString","run"],"mappings":"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","file":"uform.min.js","sourcesContent":["/*!\n * uform\n * https://github.com/yqfang/UForm#readme\n * yqfang,qianzhixiang\n * Version: 1.0.0 - 2016-07-17T16:55:05.928Z\n * License: ISC\n */\n\n\n(function() { \n\"use strict\";\nvar uf = angular.module('up.uform', ['ng-package']);\n\nuf.config([\"$provide\", \"datepickerConfig\", function ($provide, datepickerConfig) {\n    datepickerConfig.showWeeks = false;\n    $provide.decorator('ngModelDirective', [\"$delegate\", function ($delegate) {\n        var ngModel = $delegate[0], controller = ngModel.controller;\n        ngModel.controller = ['$scope', '$element', '$attrs', '$injector', function (scope, element, attrs, $injector) {\n            var $interpolate = $injector.get('$interpolate');\n            attrs.$set('name', $interpolate(attrs.name || '')(scope));\n            $injector.invoke(controller, this, {\n                '$scope': scope,\n                '$element': element,\n                '$attrs': attrs\n            });\n        }];\n        return $delegate;\n    }]);\n\n    angular.forEach({ 'ng-form': 'ngFormDirective', 'form': 'formDirective' }, function (directive) {\n        $provide.decorator(directive, [\"$delegate\", function ($delegate) {\n            var form = $delegate[0], controller = form.controller;\n            form.controller = ['$scope', '$element', '$attrs', '$injector', function (scope, element, attrs, $injector) {\n                var $interpolate = $injector.get('$interpolate');\n                attrs.$set('name', $interpolate(attrs.name || attrs.ngForm || '')(scope));\n                $injector.invoke(controller, this, {\n                    '$scope': scope,\n                    '$element': element,\n                    '$attrs': attrs\n                });\n            }];\n            return $delegate;\n        }]);\n    })\n}]);\n\n\n\n\nuf.directive('compileField', ['$compile', function ($compile) {\n    return {\n        restrict: 'A',\n        controller: [\"$scope\", function($scope) {\n            var vm = this;\n            this.field = $scope.$parent.$eval('field');\n            this.form = {};\n        }],\n        require: '?^uForm',\n        controllerAs: '$proxy',\n        scope: {},\n        link: function (scope, element, attrs, form) {\n            angular.extend(scope.$proxy.form, form);\n            element.html('<div ' + scope.$parent.$eval(attrs.compileField) + ' />');\n            $compile(element.contents())(scope);\n        }\n    };\n}])\n\nuf.directive(\"ufieldDisabled\", [\"$parse\", function ($parse) {\n    return {\n        require: \"?^uForm\",\n        restrict: 'A',\n        link: function (scope, element, attr, form) {\n            scope.$watch(function () {\n                var res = $parse(attr['ufieldDisabled'])(form.result);\n                return res;\n            }, function (value) {\n                element[0].disabled = value;\n            })\n        }\n    }\n}])\n\nuf.directive(\"ufieldHide\", [\"$parse\", function ($parse) {\n    return {\n        require: \"?^uForm\",\n        restrict: 'A',\n        link: function (scope, element, attr, form) {\n            var exp;\n            if ('hide' in scope.field) {\n                scope.$watch(function () {\n                    var res = $parse(attr.ufieldHide)(form.result);\n                    return res;\n                }, function (value) {\n                    // hide the element\n                    element.css('display', value ? 'none' : '');\n                    // delete the hide element from resutl\n                    if (value) { delete form.result[scope.field.name]; }\n                })\n            }\n        }\n    }\n}])\n\nuf.directive(\"uForm\", [\"$rootScope\", function ($rootScope) {\n    return {\n        templateUrl: 'form.html',\n        transclude: true,\n        restrict: \"EA\",\n        controller: [\"$scope\", \"$attrs\", \"$rootScope\", \"ufield\", function ($scope, $attrs, $rootScope, ufield) {\n            var $parent = $scope.$parent;\n            this.fields = $parent.$eval($attrs.fields);\n            angular.forEach(this.fields, function(field) {\n                angular.extend(field, ufield.create(field));\n            })\n            this.option = $parent.$eval($attrs.option);\n            this.result = $parent.$eval($attrs.result) || $parent.$eval($attrs.result + \"={}\");\n        }],\n        scope: {},\n        controllerAs: \"uform\",\n        require: '?^uFormGroup',\n        link: function (scope, elem, attr, group) {\n            scope.uform.$form = scope.$parent.$eval(attr.name);\n            group && group.fields && group.fields.push(scope.uform.fields);\n            group && group.result && group.result.push(scope.uform.result);\n        }\n\n    }\n}]);\n\nuf.directive(\"uFormGroup\", function () {\n    return {\n        controller: [\"$scope\", \"$attrs\", function ($scope, $attrs) {\n            this.fields = $scope.$parent.$eval($attrs.fields) || $scope.$parent.$eval($attrs.fields + \"=[]\");;\n            this.result = $scope.$parent.$eval($attrs.result) || $scope.$parent.$eval($attrs.result + \"=[]\");;\n        }],\n        scope: {},\n        template: '<div ng-transclude></div>',\n        controllerAs: \"uFormGroup\",\n        transclude: true\n    }\n});\n\nuf\n  .directive('capitalize', function() {\n    return {\n      require: 'ngModel',\n      link: function(scope, element, attrs, modelCtrl) {\n        var capitalize = function(inputValue) {\n          if (inputValue == undefined) inputValue = '';\n          var capitalized = inputValue.toUpperCase();\n          if (capitalized !== inputValue) {\n            modelCtrl.$setViewValue(capitalized);\n            modelCtrl.$render();\n          }\n          return capitalized;\n        }\n        modelCtrl.$parsers.push(capitalize);\n        capitalize(\"\"); // capitalize initial value\n      }\n    };\n  });\n\nuf.directive(\"truncateTo\", [\"$parse\", function ($parse) {\n    return {\n        require: 'ngModel',\n        restrict: 'A',\n        link: function (scope, ele, attrs, modelCtrl) {\n\n            var truncateTo = function(inputValue) {\n                var length = parseInt(attrs['truncateTo']);\n                if (inputValue == undefined) inputValue = '';\n                var truncate = inputValue.substring(0, length);\n                if (truncate !== inputValue) {\n                    modelCtrl.$setViewValue(truncate);\n                    modelCtrl.$render();\n                }\n                return truncate;\n            }\n            modelCtrl.$parsers.push(truncateTo);\n            truncateTo(\"\");\n        }\n    }\n}])\n\nangular.forEach({\n    upDate: \"up-date\",\n    upTime: \"up-time\",\n    upDatetime: \"up-datetime\",\n    upPassword: \"up-password\",\n    upCheckbox: \"up-checkbox\",\n    upRadio: \"up-radio\",\n    upSubmit: \"up-submit\",\n    upSelect: \"up-select\",\n    upTextarea: \"up-textarea\",\n}, function (tpl, direct) {\n    uf.directive(direct, ['$compile', 'uFormUtil', function ($compile, uFormUtil) {\n        return {\n            restrict: 'EA',\n            controller: [\"$scope\", function ($scope) {\n                angular.extend(this, $scope.$proxy);\n            }],\n            controllerAs: 'vm',\n            link: function (scope, elem, attr) {\n                 uFormUtil.getTemplate(tpl).then(function(textTpl) {\n                        elem.html(textTpl.replace(/ng-model/g, uFormUtil.toAttrs(scope.vm.field.customs) + \"ng-model\"));\n                        $compile(elem.contents())(scope);\n                    })\n            }\n        }\n    }])\n});\n\n\n\n\nuf\n    .directive('upDialog', [\"dialogs\", function(dialogs) {\n    return {\n        restrict: 'EA',\n        controller: [\"$scope\", function($scope) {\n            var vm = this;\n            angular.extend(this, $scope.$proxy);\n            vm.header = vm.field.header;\n            vm.body = vm.field.body;\n            vm.footer = vm.field.footer;\n            this.open = function (e) {\n                dialogs.create('up-normal-dialog.html', (vm.field.controller || 'commonDialogController') + ' as vm', vm, {size: vm.field.size})\n                    .result.then(function(data) {\n                        vm.form.result[vm.field.name] = data;\n                    })\n            }\n        }],\n        controllerAs: 'vm',\n        template: '<button class=\"btn btn-default\" ng-click=\"$event.preventDefault();vm.open($event)\">{{vm.field.button}}</button>',\n        link: function(scope, elem, attr) {}\n    }\n}])\n\nuf.directive('upEditor', ['$compile', 'uFormUtil', function ($compile, uFormUtil) {\n    return {\n        restrict: 'EA',\n        controller: [\"$scope\", function ($scope) {\n            var vm = this;\n            var syntaxMap = {\n                sql: \"text/x-sql\",\n                javascript: \"application/javascript\",\n                json: \"application/json\"\n            }\n\n            angular.extend(this, $scope.$proxy);\n            vm.field.option = {};\n            var mode = syntaxMap[vm.field.syntax];\n            angular.extend(this.field.option, {\n                lineNumbers: true,\n                lineWrapping: true,\n                mode: mode || \"text/x-sql\"\n            });\n        }],\n        controllerAs: 'vm',\n        link: function (scope, elem, attr) {\n            uFormUtil.getTemplate('up-editor').then(function(textTpl) {\n                elem.html(textTpl.replace(/ng-model/g, uFormUtil.toAttrs(scope.vm.field.customs) + \"ng-model\"));\n                $compile(elem.contents())(scope);\n            });\n        }\n    }\n}])\n\nuf.directive('upText', ['$compile', 'uFormUtil', function ($compile, uFormUtil) {\r\n    return {\r\n        restrict: 'EA',\r\n        controller: [\"$scope\", function ($scope) {\r\n            angular.extend(this, $scope.$proxy);\r\n        }],\r\n        controllerAs: 'vm',\r\n        link: function (scope, elem, attr) {\r\n            uFormUtil.getTemplate('up-text').then(function(textTpl) {\r\n                elem.html(textTpl.replace(/ng-model/g, uFormUtil.toAttrs(scope.vm.field.customs) + \"ng-model\"));\r\n                $compile(elem.contents())(scope);\r\n            });\r\n        }\r\n    }\r\n}])\nuf.controller('commonDialogController', commonDialogController);\ncommonDialogController.$inject = ['data', '$modalInstance', 'uform'];\nfunction commonDialogController(data, $modalInstance, uform) {\n    var vm = this;\n    angular.extend(this, uform.buildDialog(data.header, data.body, data.footer));\n    angular.extend(this, {\n        ok: function() {\n            $modalInstance.close(\"\");\n        },\n        cancel: function() {\n            $modalInstance.dismiss('Canceled');\n        }\n    })\n}\n\nuf.directive('upNormalDialogFooter', ['$compile', 'uFormUtil', function ($compile, uFormUtil) {\n    return {\n        restrict: 'EA',\n        link: function (scope, elem, attr) {\n            uFormUtil.getTemplate('up-normal-dialog-footer').then(function(textTpl) {\n                elem.html(textTpl.replace(/DIALOG_OK/g , attr.ok || '确定').replace(/DIALOG_CANCEL/g , attr.cancel || '取消'));\n                $compile(elem.contents())(scope);\n            });\n        }\n    }\n}])\n\nuf.directive('upNormalForm', ['$compile', 'uFormUtil', function ($compile, uFormUtil) {\n    return {\n        restrict: 'EA',\n        link: function (scope, elem, attr) {\n            uFormUtil.getTemplate('up-normal-form').then(function(textTpl) {\n                elem.html(textTpl.replace(/FORM_NAME/g, attr.name));\n                $compile(elem.contents())(scope);\n            });\n        }\n    }\n}])\n\nuf.provider('ufield', [function() {\n    var _tp = 'up-text'; // type\n    var _vo = 'dirty'; // validateOn\n    var _pt = /^.*$/; // defaut pattern\n    var _setOpts = function(opts){\n        var _opts = {};\n        opts = opts || {};\n        _opts.type = (angular.isDefined(opts.type)) ? opts.type : _tp; // type\n        _opts.validateOn = (angular.isDefined(opts.validateOn) && ((opts.validateOn === 'dirty') || (opts.validateOn === 'blur'))) ? opts.validateOn : _vo; // validate_on\n        _opts.pattern = (angular.isDefined(opts.pattern)) ? opts.pattern : _pt;\n        return _opts;\n    }; // end _setOpts\n    this.useType = function(val) {\n        if(angular.isDefined(val))\n        _tp = val;\n    }\n    this.useValidateOn = function(val) {\n        if(angular.isDefined(val))\n        _vo = val;\n    }\n    this.usePattern = function(val) {\n        if(angular.isDefined(val))\n        _pt = val;\n    }\n    this.$get = [function() {\n        return {\n            create : function (opts) {\n                opts = _setOpts(opts);\n                return opts;\n            }\n        }\n    }]\n}])\n\nuf.provider('uform', function() {\n    function _buildDialog(header, body, footer){\n        return {\n            header: header || '请在 field 配置 header 项',\n            body: body || '请在 field 配置 body 项',\n            footer: footer || '<button class=\"btn btn-warning\" type=\"button\" ng-click=\"vm.cancel()\">取消</button>'\n        }\n    }\n    function _buildForm(name, formClass, labelClass, fieldClass) {\n        var _id = 1;\n        var form = {\n            option: {\n                name: name || \"\",\n                formClass: formClass || \"form-horizontal\",\n                labelClass: labelClass || null,\n                inputClass: fieldClass || 'col-xs-12'\n            },\n            fields: {\n\n            },\n            result: {\n\n            }\n        };\n        function _end() {\n            return form;\n        }\n        var fields = form.fields;\n        var result = form.result;\n        function _addField(name, type, label, style, opts, init) {\n            fields[name] = {\n                type: type,\n                id: _id,\n                label: label,\n                style: style\n            };\n            angular.extend(fields[name], opts);\n            result[name] = init;\n            _id ++;\n            return {\n                addField: _addField,\n                end: _end\n            }\n        }\n        return {\n            addField: _addField,\n            end: _end\n        }\n    }\n\n\n\n    this.$get = function() {\n        return {\n            buildDialog : _buildDialog,\n            buildForm: _buildForm\n        }\n    }\n})\n\n// 把对象变为数组，并按照 id 排序\nuf.filter('orderById', function () {\n    return function (items, field, reverse) {\n        var filtered = [];\n        angular.forEach(items, function (item, name) {\n            item[\"name\"] = name;\n            filtered.push(item);\n        });\n        filtered.sort(function (a, b) {\n            return (a[field] > b[field] ? 1 : -1);\n        });\n        if (reverse) filtered.reverse();\n        return filtered;\n    };\n});\n\nuf.factory('uFormUtil', [\"$templateCache\", \"$q\", \"$http\", \"dialogs\", function($templateCache, $q, $http, dialogs) {\n    return {\n        toAttrs: toAttrs,\n        getTemplate: getTemplate\n    }\n    function toAttrs(obj) {\n        if(!obj) {\n            return \"\";\n        }\n        var str = \"\";\n        for(var o in obj) {\n            var next;\n            if(!obj[o]) {\n                next = o;\n            }else {\n                next = (o + '=' + obj[o])\n            }\n            str += (next + ' ')\n        }\n        return str;\n    }\n    function getTemplate (name) {\n        var tpath = name + '.html';\n        var tpl = $templateCache.get(tpath);\n        if(tpl) {\n            return $q.when(tpl);\n        }else {\n            return $http.get(tpath, {cache: true}).then(function(html) {\n                $templateCache.put(tpath, html.data);\n                return html.data;\n            }, function(response) {\n                dialogs.error(\"模板错误!\", \"通过：\" + tpath + \" 找不到模板\");\n            })\n        }\n    }\n}])\n\nuf.directive('upBindCompile', ['$compile', function ($compile) {\n    return {\n        restrict: 'EA',\n        link: function (scope, elem, attr) {\n            var value = scope.$eval(attr.upBindCompile);\n            elem.html(value && value.toString());\n            $compile(elem.contents())(scope);\n        }\n    }\n}])\n\n}());\nangular.module('up.uform').run(['$templateCache', function($templateCache) {$templateCache.put('form.html','<div><style type=text/css>\\n\\t\\t.form-inline .inline-control {\\n\\t\\t\\tdisplay: inline-block;\\n\\t\\t}\\n\\t\\t.form-inline .datepicker {\\n\\t\\t\\twidth: 120px;\\n\\t\\t}\\n\\t\\t.form-inline input[type=\\'text\\'] {\\n\\t\\t\\twidth: 120px;\\n\\t\\t}\\n\\t\\t.form-inline .form-group {\\n\\t\\t    display: inline-block;\\n\\t\\t    margin-bottom: 0;\\n\\t\\t    vertical-align: middle;\\n\\t\\t    margin-right: 10px;\\n\\t\\t}\\n\\t\\t.form-horizontal .control-label {\\n\\t\\t\\ttext-align: right;\\n\\t\\t}\\n\\t\\t.control-datepicker {\\n\\t\\t\\tpadding-left: 0;\\n\\t\\t}\\n\\t\\t.timepicker tr.text-center {\\n\\t\\t\\tdisplay: none;\\n\\t\\t}\\n\\t</style><div class=form-group ufield-hide={{field.hide}} ng-class=field.name ng-repeat=\"field in (uform.fields | orderById: \\'id\\')\"><label for={{field.name}} ng-class=uform.option.labelClass class=control-label><span ng-show=\"field.required && field.label\">*</span> <span ng-if=\"field.type!=\\'up-checkbox\\'\">{{ field.label }}</span></label><div compile-field=field.type ng-class=uform.option.inputClass></div></div><div ng-transclude=\"\"></div></div>');\n$templateCache.put('up-checkbox.html','<div class=checkbox><label><input type=checkbox name={{vm.field.name}} ng-model=vm.form.result[vm.field.name]> {{ vm.field.label }}</label></div>');\n$templateCache.put('up-date.html','<div><input type=text name={{vm.field.name}} class=\"form-control datepicker\" datepicker-popup=yyyy-MM-dd ng-model=vm.form.result[vm.field.name] ng-init=\"vm.form.open=false\" is-open=vm.form.open ng-style=vm.field.style show-button-bar=false ng-click=\"vm.form.open=!vm.form.open\"></div>');\n$templateCache.put('up-datetime.html','<div><div class=\"col-xs-6 control-datepicker\"><input type=text name={{vm.field.name}} class=\"form-control datepicker\" datepicker-popup=yyyy-MM-dd ng-model=vm.form.result[vm.field.name] ng-init=\"vm.form.open=false\" is-open=vm.form.open show-button-bar=false ng-click=\"vm.form.open=!vm.form.open\"></div><div><div class=timepicker timepicker=\"\" ng-model=vm.form.result[vm.field.name]></div></div></div>');\n$templateCache.put('up-editor.html','<style>\\n    .CodeMirror.cm-s-default {\\n        border: 1px solid #ccc;;\\n        height: 100%;\\n        border-radius: 4px;\\n    }\\n</style><section ng-style=vm.field.style><div ui-codemirror=vm.field.option style=\"height: 100%;\" ng-model=vm.form.result[vm.field.name]></div></section>');\n$templateCache.put('up-normal-dialog-footer.html','<button class=\"btn btn-primary\" type=button ng-click=vm.ok()>DIALOG_OK</button> <button class=\"btn btn-warning\" type=button ng-click=vm.cancel()>DIALOG_CANCEL</button>');\n$templateCache.put('up-normal-dialog.html','<div class=modal-header><h3 class=modal-title up-bind-compile=vm.header></h3></div><div class=modal-body up-bind-compile=vm.body></div><div class=modal-footer up-bind-compile=vm.footer></div>');\n$templateCache.put('up-normal-form.html','<form u-form=\"\" novalidate=\"\" name={{vm.option.name}} ng-class=vm.option.formClass fields=vm.fields option=vm.option result=vm.result ng-submit=vm.submit()></form>');\n$templateCache.put('up-password.html','<input type=password id={{vm.field.name}} name={{vm.field.name}} ng-model=vm.form.result[vm.field.name] ng-required=vm.field.required ng-maxlength={{vm.field.maxlength}} ng-minlength={{vm.field.minlength}} ng-pattern=vm.field.pattern class=form-control ufield-disabled={{vm.field.disabled}} ng-attr-placeholder={{vm.field.placeholder}} ng-style=vm.field.style>');\n$templateCache.put('up-radio.html','<div><div class=radio-inline ng-repeat=\"candidate in vm.field.candidates\"><label><input type=radio ng-init=\"vm.form.result[vm.field.name]=vm.field.candidates[0].value\" ng-model=vm.form.result[vm.field.name] name={{vm.field.name}} value={{candidate.value}} ng-required=vm.field.required>{{candidate.label}}</label></div></div>');\n$templateCache.put('up-select.html','<select ng-init=\"vm.form.result[vm.field.name]=vm.field.candidates[0].value\" class=form-control ng-model=vm.form.result[vm.field.name] name={{vm.field.name}} ng-options=\"option.value as option.name for option in vm.field.candidates\" ng-required=vm.field.required></select>');\n$templateCache.put('up-submit.html','<input class=\"btn btn-primary\" type=submit value={{vm.field.value}}>');\n$templateCache.put('up-text.html','<input type=text id={{vm.field.name}} name={{vm.field.name}} ng-model=vm.form.result[vm.field.name] ng-required=vm.field.required ng-maxlength={{vm.field.maxlength}} ng-minlength={{vm.field.minlength}} ng-pattern=vm.field.pattern class=form-control ufield-disabled={{vm.field.disabled}} ng-attr-placeholder={{vm.field.placeholder}} ng-style=vm.field.style>');\n$templateCache.put('up-textarea.html','<textarea id={{vm.field.name}} name={{vm.field.name}} ng-model=vm.form.result[vm.field.name] ng-required=vm.field.required ng-maxlength={{vm.field.maxlength}} ng-minlength={{vm.field.minlength}} ng-pattern=vm.field.pattern class=form-control ufield-disabled={{vm.field.disabled}} ng-attr-placeholder={{vm.field.placeholder}} ng-style=vm.field.style>\\n</textarea>');\n$templateCache.put('up-time.html','<div><div class=timepicker timepicker=\"\" ng-model=vm.form.result[vm.field.name]></div></div>');}]);",null,null],"sourceRoot":"/source/"}