{"version":3,"sources":["uform.js","uform_without_templates.js","templates.js"],"names":["commonDialogController","data","$modalInstance","uform","angular","extend","this","buildDialog","header","body","footer","ok","close","cancel","dismiss","uf","module","config","$provide","datepickerConfig","showWeeks","decorator","$delegate","ngModel","controller","scope","element","attrs","$injector","$interpolate","get","$set","name","invoke","$scope","$element","$attrs","forEach","ng-form","form","directive","ngForm","$compile","uFormUtil","restrict","field","$parent","$eval","require","controllerAs","link","$proxy","type","compileField","formEle","closest","targetName","slot","find","getTemplate","then","textTpl","actpl","replace","length","html","contents","$parse","attr","$watch","res","result","value","disabled","ufieldHide","css","$rootScope","fields","option","elem","group","tpl","layout","$form","push","template","transclude","modelCtrl","capitalize","inputValue","undefined","capitalized","toUpperCase","$setViewValue","$render","$parsers","ele","truncateTo","parseInt","truncate","substring","upText","upDate","upTime","upDatetime","upPassword","upCheckbox","upRadio","upSubmit","upSelect","upTextarea","direct","toAttrs","vm","dialogs","open","e","create","size","syntaxMap","sql","javascript","json","mode","syntax","lineNumbers","lineWrapping","$inject","provider","_buildDialog","_buildForm","formClass","labelClass","fieldClass","_end","_addField","label","style","opts","init","id","_id","addField","end","inputClass","$get","buildForm","filter","items","reverse","filtered","item","sort","a","b","factory","$templateCache","$q","$http","obj","str","o","next","tpath","when","cache","put","response","error","upBindCompile","toString","run"],"mappings":"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","file":"uform.min.js","sourcesContent":["/*!\n * uform\n * https://github.com/yqfang/UForm#readme\n * yqfang,qianzhixiang\n * Version: 1.0.0 - 2016-07-21T16:52:26.404Z\n * License: ISC\n */\n\n\n(function() { \n\"use strict\";\nvar uf = angular.module('up.uform', ['ng-package']);\n\nuf.config([\"$provide\", \"datepickerConfig\", function ($provide, datepickerConfig) {\n    datepickerConfig.showWeeks = false;\n    $provide.decorator('ngModelDirective', [\"$delegate\", function ($delegate) {\n        var ngModel = $delegate[0], controller = ngModel.controller;\n        ngModel.controller = ['$scope', '$element', '$attrs', '$injector', function (scope, element, attrs, $injector) {\n            var $interpolate = $injector.get('$interpolate');\n            attrs.$set('name', $interpolate(attrs.name || '')(scope));\n            $injector.invoke(controller, this, {\n                '$scope': scope,\n                '$element': element,\n                '$attrs': attrs\n            });\n        }];\n        return $delegate;\n    }]);\n\n    angular.forEach({ 'ng-form': 'ngFormDirective', 'form': 'formDirective' }, function (directive) {\n        $provide.decorator(directive, [\"$delegate\", function ($delegate) {\n            var form = $delegate[0], controller = form.controller;\n            form.controller = ['$scope', '$element', '$attrs', '$injector', function (scope, element, attrs, $injector) {\n                var $interpolate = $injector.get('$interpolate');\n                attrs.$set('name', $interpolate(attrs.name || attrs.ngForm || '')(scope));\n                $injector.invoke(controller, this, {\n                    '$scope': scope,\n                    '$element': element,\n                    '$attrs': attrs\n                });\n            }];\n            return $delegate;\n        }]);\n    })\n}]);\n\n\n\n\nuf.directive('compileField', ['$compile', 'uFormUtil', function ($compile, uFormUtil) {\n    return {\n        restrict: 'A',\n        controller: [\"$scope\", function($scope) {\n            var vm = this;\n            this.field = $scope.$parent.$eval('field');\n            this.form = {};\n        }],\n        require: '?^uForm',\n        controllerAs: '$proxy',\n        scope: {},\n        link: function (scope, element, attrs, form) {\n            angular.extend(scope.$proxy.form, form);\n            var type = scope.$parent.$eval(attrs.compileField) || 'up-text';\n            var formEle = element.closest(\"[u-form]\");\n            var targetName = scope.$proxy.field.name;\n            var slot = formEle.find(\"[transclude-id='\" + targetName + \"']\");\n            uFormUtil.getTemplate('field').then(function(textTpl) {\n                var actpl = textTpl.replace(/tmptype/i, type);\n                if(slot.length){\n                    slot.html(actpl);\n                    $compile(slot.contents())(scope);\n                }else {\n                    element.html(actpl);\n                    $compile(element.contents())(scope);\n                }\n            })\n        }\n    };\n}])\n\nuf.directive(\"ufieldDisabled\", [\"$parse\", function ($parse) {\n    return {\n        require: \"?^uForm\",\n        restrict: 'A',\n        link: function (scope, element, attr, form) {\n            scope.$watch(function () {\n                var res = $parse(attr['ufieldDisabled'])(form.result);\n                return res;\n            }, function (value) {\n                element[0].disabled = value;\n            })\n        }\n    }\n}])\n\nuf.directive(\"ufieldHide\", [\"$parse\", function ($parse) {\n    return {\n        require: \"?^uForm\",\n        restrict: 'A',\n        link: function (scope, element, attr, form) {\n            var exp;\n            if ('hide' in scope.$proxy.field) {\n                scope.$watch(function () {\n                    var res = $parse(attr.ufieldHide)(form.result);\n                    return res;\n                }, function (value) {\n                    // hide the element\n                    element.css('display', value ? 'none' : '');\n                    // delete the hide element from resutl\n                    if (value) { delete form.result[scope.$proxy.field.name]; }\n                })\n            }\n        }\n    }\n}])\n\nuf.directive(\"uForm\", [\"$rootScope\", \"uFormUtil\", \"$compile\", function ($rootScope, uFormUtil, $compile) {\n    return {\n        restrict: \"EA\",\n        controller: [\"$scope\", \"$attrs\", \"$rootScope\", function ($scope, $attrs, $rootScope) {\n            var $parent = $scope.$parent;\n            this.fields = $parent.$eval($attrs.fields);\n            this.option = $parent.$eval($attrs.option);\n            this.result = $parent.$eval($attrs.result) || $parent.$eval($attrs.result + \"={}\");\n        }],\n        scope: {},\n        controllerAs: \"uform\",\n        require: '?^uFormGroup',\n        link: function (scope, elem, attr, group) {\n            uFormUtil.getTemplate('form').then(function(tpl) {\n                elem.html(tpl.replace(/form_layout/i, scope.uform.option.layout || \"\"));\n                $compile(elem.contents())(scope);\n            })\n            scope.uform.$form = scope.$parent.$eval(attr.name);\n            group && group.fields && group.fields.push(scope.uform.fields);\n            group && group.result && group.result.push(scope.uform.result);\n        }\n\n    }\n}]);\n\nuf.directive(\"uFormGroup\", function () {\n    return {\n        controller: [\"$scope\", \"$attrs\", function ($scope, $attrs) {\n            this.fields = $scope.$parent.$eval($attrs.fields) || $scope.$parent.$eval($attrs.fields + \"=[]\");;\n            this.result = $scope.$parent.$eval($attrs.result) || $scope.$parent.$eval($attrs.result + \"=[]\");;\n        }],\n        scope: {},\n        template: '<div ng-transclude></div>',\n        controllerAs: \"uFormGroup\",\n        transclude: true\n    }\n});\n\nuf\n  .directive('capitalize', function() {\n    return {\n      require: 'ngModel',\n      link: function(scope, element, attrs, modelCtrl) {\n        var capitalize = function(inputValue) {\n          if (inputValue == undefined) inputValue = '';\n          var capitalized = inputValue.toUpperCase();\n          if (capitalized !== inputValue) {\n            modelCtrl.$setViewValue(capitalized);\n            modelCtrl.$render();\n          }\n          return capitalized;\n        }\n        modelCtrl.$parsers.push(capitalize);\n        capitalize(\"\"); // capitalize initial value\n      }\n    };\n  });\n\nuf.directive(\"truncateTo\", [\"$parse\", function ($parse) {\n    return {\n        require: 'ngModel',\n        restrict: 'A',\n        link: function (scope, ele, attrs, modelCtrl) {\n\n            var truncateTo = function(inputValue) {\n                var length = parseInt(attrs['truncateTo']);\n                if (inputValue == undefined) inputValue = '';\n                var truncate = inputValue.substring(0, length);\n                if (truncate !== inputValue) {\n                    modelCtrl.$setViewValue(truncate);\n                    modelCtrl.$render();\n                }\n                return truncate;\n            }\n            modelCtrl.$parsers.push(truncateTo);\n            truncateTo(\"\");\n        }\n    }\n}])\n\nangular.forEach({\n    upText: \"up-text\",\n    upDate: \"up-date\",\n    upTime: \"up-time\",\n    upDatetime: \"up-datetime\",\n    upPassword: \"up-password\",\n    upCheckbox: \"up-checkbox\",\n    upRadio: \"up-radio\",\n    upSubmit: \"up-submit\",\n    upSelect: \"up-select\",\n    upTextarea: \"up-textarea\",\n}, function (tpl, direct) {\n    uf.directive(direct, ['$compile', 'uFormUtil', function ($compile, uFormUtil) {\n        return {\n            restrict: 'EA',\n            controller: [\"$scope\", function ($scope) {\n                angular.extend(this, $scope.$proxy);\n            }],\n            controllerAs: 'vm',\n            link: function (scope, elem, attr) {\n                 uFormUtil.getTemplate(tpl).then(function(textTpl) {\n                        elem.html(textTpl.replace(/ng-model/g, uFormUtil.toAttrs(scope.vm.field.extend) + \"ng-model\"));\n                        $compile(elem.contents())(scope);\n                 })\n            }\n        }\n    }])\n});\n\n\n\n\nuf\n    .directive('upDialog', [\"dialogs\", function(dialogs) {\n    return {\n        restrict: 'EA',\n        controller: [\"$scope\", function($scope) {\n            var vm = this;\n            angular.extend(this, $scope.$proxy);\n            vm.header = vm.field.header;\n            vm.body = vm.field.body;\n            vm.footer = vm.field.footer;\n            this.open = function (e) {\n                dialogs.create('up-normal-dialog.html', (vm.field.controller || 'commonDialogController') + ' as vm', vm, {size: vm.field.size})\n                    .result.then(function(data) {\n                        vm.form.result[vm.field.name] = data;\n                    })\n            }\n        }],\n        controllerAs: 'vm',\n        template: '<button class=\"btn btn-default\" ng-click=\"$event.preventDefault();vm.open($event)\">{{vm.field.button}}</button>',\n        link: function(scope, elem, attr) {}\n    }\n}])\n\nuf.directive('upEditor', ['$compile', 'uFormUtil', function ($compile, uFormUtil) {\n    return {\n        restrict: 'EA',\n        controller: [\"$scope\", function ($scope) {\n            var vm = this;\n            var syntaxMap = {\n                sql: \"text/x-sql\",\n                javascript: \"application/javascript\",\n                json: \"application/json\"\n            }\n\n            angular.extend(this, $scope.$proxy);\n            vm.field.option = {};\n            var mode = syntaxMap[vm.field.syntax];\n            angular.extend(this.field.option, {\n                lineNumbers: true,\n                lineWrapping: true,\n                mode: mode || \"text/x-sql\"\n            });\n        }],\n        controllerAs: 'vm',\n        link: function (scope, elem, attr) {\n            uFormUtil.getTemplate('up-editor').then(function(textTpl) {\n                elem.html(textTpl.replace(/ng-model/g, uFormUtil.toAttrs(scope.vm.field.extend) + \"ng-model\"));\n                $compile(elem.contents())(scope);\n            });\n        }\n    }\n}])\n\nuf.controller('commonDialogController', commonDialogController);\ncommonDialogController.$inject = ['data', '$modalInstance', 'uform'];\nfunction commonDialogController(data, $modalInstance, uform) {\n    var vm = this;\n    angular.extend(this, uform.buildDialog(data.header, data.body, data.footer));\n    angular.extend(this, {\n        ok: function() {\n            $modalInstance.close(\"\");\n        },\n        cancel: function() {\n            $modalInstance.dismiss('Canceled');\n        }\n    })\n}\n\nuf.directive('upNormalDialogFooter', ['$compile', 'uFormUtil', function ($compile, uFormUtil) {\n    return {\n        restrict: 'EA',\n        link: function (scope, elem, attr) {\n            uFormUtil.getTemplate('up-normal-dialog-footer').then(function(textTpl) {\n                elem.html(textTpl.replace(/DIALOG_OK/g , attr.ok || '确定').replace(/DIALOG_CANCEL/g , attr.cancel || '取消'));\n                $compile(elem.contents())(scope);\n            });\n        }\n    }\n}])\n\nuf.directive('upNormalForm', ['$compile', 'uFormUtil', function ($compile, uFormUtil) {\n    return {\n        restrict: 'EA',\n        link: function (scope, elem, attr) {\n            uFormUtil.getTemplate('up-normal-form').then(function(textTpl) {\n                elem.html(textTpl.replace(/FORM_NAME/g, attr.name));\n                $compile(elem.contents())(scope);\n            });\n        }\n    }\n}])\n\nuf.provider('uform', function() {\n    function _buildDialog(header, body, footer){\n        return {\n            header: header || '请在 field 配置 header 项',\n            body: body || '请在 field 配置 body 项',\n            footer: footer || '<button class=\"btn btn-warning\" type=\"button\" ng-click=\"vm.cancel()\">取消</button>'\n        }\n    }\n    function _buildForm(name, formClass, labelClass, fieldClass) {\n        var _id = 1;\n        var form = {\n            option: {\n                name: name || \"\",\n                formClass: formClass || \"form-horizontal\",\n                labelClass: labelClass || null,\n                inputClass: fieldClass || 'col-xs-12'\n            },\n            fields: {\n\n            },\n            result: {\n\n            }\n        };\n        function _end() {\n            return form;\n        }\n        var fields = form.fields;\n        var result = form.result;\n        /**\n         * name: field name\n         * type: field type\n         * label: label, null if not exist\n         * style: field style\n         * opts: additional opts(depends on your fields)\n         * init: the init value of your field.\n         */\n        function _addField(name, type, label, style, opts, init) {\n            fields[name] = {\n                type: type,\n                id: _id,\n                label: label,\n                style: style\n            };\n            angular.extend(fields[name], opts);\n            result[name] = init;\n            _id ++;\n            return {\n                addField: _addField,\n                end: _end\n            }\n        }\n        return {\n            addField: _addField,\n            end: _end\n        }\n    }\n\n\n\n    this.$get = function() {\n        return {\n            buildDialog : _buildDialog,\n            buildForm: _buildForm\n        }\n    }\n})\n\n// 把对象变为数组，并按照 id 排序\nuf.filter('orderById', function () {\n    return function (items, field, reverse) {\n        var filtered = [];\n        angular.forEach(items, function (item, name) {\n            item[\"name\"] = name;\n            filtered.push(item);\n        });\n        filtered.sort(function (a, b) {\n            return (a[field] > b[field] ? 1 : -1);\n        });\n        if (reverse) filtered.reverse();\n        return filtered;\n    };\n});\n\nuf.factory('uFormUtil', [\"$templateCache\", \"$q\", \"$http\", \"dialogs\", function($templateCache, $q, $http, dialogs) {\n    return {\n        toAttrs: toAttrs,\n        getTemplate: getTemplate\n    }\n    function toAttrs(obj) {\n        if(!obj) {\n            return \"\";\n        }\n        var str = \"\";\n        for(var o in obj) {\n            var next;\n            if(!obj[o]) {\n                next = o;\n            }else {\n                next = (o + '=' + obj[o])\n            }\n            str += (next + ' ')\n        }\n        return str;\n    }\n    function getTemplate (name) {\n        var tpath = name + '.html';\n        var tpl = $templateCache.get(tpath);\n        if(tpl) {\n            return $q.when(tpl);\n        }else {\n            return $http.get(tpath, {cache: true}).then(function(html) {\n                $templateCache.put(tpath, html.data);\n                return html.data;\n            }, function(response) {\n                dialogs.error(\"模板错误!\", \"通过：\" + tpath + \" 找不到模板\");\n            })\n        }\n    }\n}])\n\nuf.directive('upBindCompile', ['$compile', function ($compile) {\n    return {\n        restrict: 'EA',\n        link: function (scope, elem, attr) {\n            var value = scope.$eval(attr.upBindCompile);\n            elem.html(value && value.toString());\n            $compile(elem.contents())(scope);\n        }\n    }\n}])\n\n}());\nangular.module('up.uform').run(['$templateCache', function($templateCache) {$templateCache.put('field.html','<div class=form-group ufield-hide={{$proxy.field.hide}} ng-class=\"{\\'has-error\\': $proxy.form.$form[$proxy.field.name].$dirty && $proxy.form.$form[$proxy.field.name].$invalid}\"><label for={{$proxy.field.name}} ng-class=$proxy.form.option.labelClass class=control-label><span ng-show=\"$proxy.field.extend[\\'ng-required\\'] && $proxy.field.label\">*</span> <span ng-if=\"$proxy.field.type!=\\'up-checkbox\\'\">{{ $proxy.field.label }}</span></label><div ng-class=\"[$proxy.field.name, $proxy.form.option.inputClass]\" tmptype=\"\"></div></div>');\n$templateCache.put('form.html','<div form_layout=\"\"><style type=text/css>\\n\\t\\t.form-horizontal .control-label {\\n\\t\\t\\ttext-align: right;\\n\\t\\t}\\n\\t\\t.control-datepicker {\\n\\t\\t\\tpadding-left: 0;\\n\\t\\t}\\n\\t\\t.timepicker tr.text-center {\\n\\t\\t\\tdisplay: none;\\n\\t\\t}\\n\\t</style><div ng-repeat=\"field in (uform.fields | orderById: \\'id\\')\"><div compile-field=field.type></div></div></div>');\n$templateCache.put('up-checkbox.html','<div class=checkbox><label><input type=checkbox name={{vm.field.name}} ng-model=vm.form.result[vm.field.name]> {{ vm.field.label }}</label></div>');\n$templateCache.put('up-date.html','<div><input type=text name={{vm.field.name}} class=\"form-control datepicker\" datepicker-popup=yyyy-MM-dd ng-model=vm.form.result[vm.field.name] ng-init=\"vm.form.open=false\" is-open=vm.form.open ng-style=vm.field.style show-button-bar=false ng-click=\"vm.form.open=!vm.form.open\"></div>');\n$templateCache.put('up-datetime.html','<div><div class=\"col-xs-12 control-datepicker\"><input type=text name={{vm.field.name}} class=\"form-control datepicker\" datepicker-popup=yyyy-MM-dd ng-model=vm.form.result[vm.field.name] ng-init=\"vm.form.open=false\" is-open=vm.form.open show-button-bar=false ng-click=\"vm.form.open=!vm.form.open\"></div><div><div class=timepicker timepicker=\"\" ng-model=vm.form.result[vm.field.name]></div></div></div>');\n$templateCache.put('up-editor.html','<style>\\n    .CodeMirror.cm-s-default {\\n        border: 1px solid #ccc;;\\n        height: 100%;\\n        border-radius: 4px;\\n    }\\n</style><section ng-style=vm.field.style><div ui-codemirror=vm.field.option style=\"height: 100%;\" ng-model=vm.form.result[vm.field.name]></div></section>');\n$templateCache.put('up-normal-dialog-footer.html','<button class=\"btn btn-primary\" type=button ng-click=vm.ok()>DIALOG_OK</button> <button class=\"btn btn-warning\" type=button ng-click=vm.cancel()>DIALOG_CANCEL</button>');\n$templateCache.put('up-normal-dialog.html','<div class=modal-header><h3 class=modal-title up-bind-compile=vm.header></h3></div><div class=modal-body up-bind-compile=vm.body></div><div class=modal-footer up-bind-compile=vm.footer></div>');\n$templateCache.put('up-normal-form.html','<form u-form=\"\" novalidate=\"\" name={{vm.option.name}} ng-class=vm.option.formClass fields=vm.fields option=vm.option result=vm.result ng-submit=vm.submit()></form>');\n$templateCache.put('up-password.html','<input type=password id={{vm.field.name}} name={{vm.field.name}} ng-model=vm.form.result[vm.field.name] class=form-control ufield-disabled={{vm.field.disabled}} ng-attr-placeholder={{vm.field.placeholder}} ng-style=vm.field.style>');\n$templateCache.put('up-radio.html','<div><div class=radio-inline ng-repeat=\"candidate in vm.field.candidates\"><label><input type=radio ng-init=\"vm.form.result[vm.field.name]=vm.field.candidates[0].value\" ng-model=vm.form.result[vm.field.name] name={{vm.field.name}} value={{candidate.value}}>{{candidate.label}}</label></div></div>');\n$templateCache.put('up-select.html','<select ng-init=\"vm.form.result[vm.field.name]=vm.field.candidates[0].value\" class=form-control ng-model=vm.form.result[vm.field.name] name={{vm.field.name}} ng-options=\"option.value as option.name for option in vm.field.candidates\"></select>');\n$templateCache.put('up-submit.html','<input class=\"btn btn-primary\" type=submit value={{vm.field.value}}>');\n$templateCache.put('up-text.html','<input type=text id={{vm.field.name}} name={{vm.field.name}} ng-model=vm.form.result[vm.field.name] class=form-control ufield-disabled={{vm.field.disabled}} ng-attr-placeholder={{vm.field.placeholder}} ng-style=vm.field.style>');\n$templateCache.put('up-textarea.html','<textarea id={{vm.field.name}} name={{vm.field.name}} ng-model=vm.form.result[vm.field.name] class=form-control ufield-disabled={{vm.field.disabled}} ng-attr-placeholder={{vm.field.placeholder}} ng-style=vm.field.style>\\n</textarea>');\n$templateCache.put('up-time.html','<div><div class=timepicker timepicker=\"\" ng-model=vm.form.result[vm.field.name]></div></div>');}]);",null,null],"sourceRoot":"/source/"}